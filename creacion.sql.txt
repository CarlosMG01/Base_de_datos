CREATE TABLE IF NOT EXISTS "archivos multimedia"(ruta TEXT NOT NULL UNIQUE PRIMARY KEY, texto_alternativo TEXT);
CREATE TABLE IF NOT EXISTS "noticias"(id_noticia INTEGER NOT NULL UNIQUE PRIMARY KEY ASC AUTOINCREMENT, titulo TEXT NOT NULL UNIQUE, fecha_publicacion DATE NOT NULL, lugar TEXT, cuerpo TEXT NOT NULL UNIQUE, dni_autor TEXT, FOREIGN KEY(dni_autor) REFERENCES "autores"(dni) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "temas"(nombre_tema TEXT NOT NULL UNIQUE PRIMARY KEY, nombre_seccion TEXT, FOREIGN KEY(nombre_seccion) REFERENCES "secciones"(nombre_seccion) ON DELETE SET NULL ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "autores"(nombre TEXT NOT NULL, apellidos TEXT, dni TEXT UNIQUE PRIMARY KEY CHECK (length(dni) <= 9));
CREATE TABLE IF NOT EXISTS "noticias relacionadas"(id_relacion INTEGER NOT NULL UNIQUE PRIMARY KEY ASC AUTOINCREMENT, id_noticia1 INTEGER NOT NULL, id_noticia2 INTEGER NOT NULL, FOREIGN KEY(id_noticia1) REFERENCES "noticias"(id_noticia) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(id_noticia2) REFERENCES "noticias"(id_noticia) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "temas_noticias"(id_relacion INTEGER NOT NULL UNIQUE PRIMARY KEY ASC AUTOINCREMENT, nombre_tema TEXT NOT NULL, id_noticia INTEGER NOT NULL, FOREIGN KEY(nombre_tema) REFERENCES "temas"(nombre_tema) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY(id_noticia) REFERENCES "noticias"(id_noticia) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "comentarios"(id_comentario INTEGER NOT NULL UNIQUE PRIMARY KEY ASC AUTOINCREMENT, comentario TEXT NOT NULL, fecha_post DATE NOT NULL, email_usuario TEXT NOT NULL, id_noticia INTEGER NOT NULL, id_respuesta INTEGER, FOREIGN KEY(email_usuario) REFERENCES "usuarios"(email) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(id_noticia) REFERENCES "noticias" ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(id_respuesta) REFERENCES "comentarios"(id_comentario) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "secciones"(nombre_seccion TEXT NOT NULL UNIQUE PRIMARY KEY, edad_recomendada INTEGER);
CREATE TABLE IF NOT EXISTS "usuarios"(email TEXT NOT NULL UNIQUE PRIMARY KEY, nickname TEXT NOT NULL UNIQUE, contraseÃ±a TEXT NOT NULL, fecha_nacimiento DATE NOT NULL, notificaciones INTEGER NOT NULL DEFAULT 0, foto_perfil TEXT, FOREIGN KEY(foto_perfil) REFERENCES "archivos multimedia"(ruta) ON DELETE SET NULL ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "secciones favoritas"(id_relacion INTEGER NOT NULL UNIQUE PRIMARY KEY ASC AUTOINCREMENT, email TEXT NOT NULL, nombre_seccion TEXT NOT NULL, FOREIGN KEY(email) REFERENCES "usuarios"(email) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(nombre_seccion) REFERENCES "secciones"(nombre_seccion) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE IF NOT EXISTS "multimedia_noticias"(id_relacion INTEGER NOT NULL UNIQUE PRIMARY KEY ASC AUTOINCREMENT, ruta TEXT NOT NULL, id_noticia INTEGER NOT NULL, portada INTEGER NOT NULL DEFAULT 0, FOREIGN KEY(ruta) REFERENCES "archivos multimedia"(ruta) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY(id_noticia) REFERENCES "noticias"(id_noticia) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE VIEW "imagenes_noticia" AS select ruta FROM multimedia_noticias INNER JOIN noticias WHERE noticias.id_noticia = multimedia_noticias.id_noticia;
CREATE VIEW "secciones_temas" AS select * FROM secciones NATURAL JOIN temas;